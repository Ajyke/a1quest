name: publish

on:
  push:
    branches: [ "development" ]

env:
  # Use docker.io for Docker Hub if empty. Actor now lowercase
  REGISTRY: ghcr.io
  IMAGE_NAME: ajykee/a1questweb:latest
  PAYSTACK_KEY: ${{ secrets.PAYSTACK_KEY }}
  FLUTTERWAVE_KEY: ${{ secrets.FLUTTERWAVE_KEY }}
jobs:
    publish:
        name: publish image
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3
        - name: Login
          run: |
            echo ${{ secrets.PAT }} | docker login ghcr.io -u ajykee --password-stdin
        - name: Build and Publish
          run: |
            docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    deploy:
        needs: publish
        name: deploy image
        runs-on: ubuntu-latest
        env:
          NEXT_PUBLIC_API_URL: https://a1quest-api-production.up.railway.app/
          NEXT_PUBLIC_TOKEN_NAME: A1Quest
          NEXT_PUBLIC_TOKEN_KEY: A1_QUE_TOK_KEY
        steps:
        - name: install ssh keys

          run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        - name: connect and pull
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
        - name: prune unused Docker images
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker image prune --force"
        - name: cleanup
          run: rm -rf ~/.ssh
